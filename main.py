# -*- coding: utf-8 -*-
"""main.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n5Ly67FP_p12JwcR6eg-nI1GiYJKIKiC
"""

import torch
from torch import nn, optim
from torchvision import datasets
from torch.utils.data import DataLoader
from models.tinyvit import TinyViT
from utils.tinyvit_utils import transform_train, transform_test, train_and_evaluate

# Hyperparameters
batch_size = 64
num_epochs = 10
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

# Datasets and Loaders
train_dataset = datasets.CIFAR10(root='./data', train=True, transform=transform_train, download=True)
test_dataset = datasets.CIFAR10(root='./data', train=False, transform=transform_test)

train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=2)
test_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=2)

# Model, Loss, Optimizer
model = TinyViT().to(device)
criterion = nn.CrossEntropyLoss()
optimizer = optim.Adam(model.parameters(), lr=3e-4)

# Train and evaluate
train_and_evaluate(model, train_loader, test_loader, criterion, optimizer, num_epochs=num_epochs, device=device)

